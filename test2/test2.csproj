<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <TypeScriptExperimentalDecorators>true</TypeScriptExperimentalDecorators>
    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="LinqKit" Version="1.1.17" />
    <PackageReference Include="Microsoft.AspNet.Providers.Core" Version="2.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.3" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.2" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\api-authorization\auth-role-access\authorization-role-can-access.component.ts" />
    <None Remove="ClientApp\src\app\admin\admin.component.ts" />
    <None Remove="ClientApp\src\app\details\about-us.component.ts" />
    <None Remove="ClientApp\src\app\details\contacts.component.ts" />
    <None Remove="ClientApp\src\app\details\how-to.component.ts" />
    <None Remove="ClientApp\src\app\models\boockedPerformance.ts" />
    <None Remove="ClientApp\src\app\models\performance.ts" />
    <None Remove="ClientApp\src\app\models\performanceDate.ts" />
    <None Remove="ClientApp\src\app\models\PerformanceModel.ts" />
    <None Remove="ClientApp\src\app\models\performanceTime.ts" />
    <None Remove="ClientApp\src\app\performance\performance.details.component.ts" />
    <None Remove="ClientApp\src\app\performance\performance.filter.component.ts" />
    <None Remove="ClientApp\src\app\performance\performance.item.component.ts" />
    <None Remove="ClientApp\src\app\performance\performances.component.ts" />
    <None Remove="ClientApp\src\app\services\performanceService.ts" />
    <None Remove="ClientApp\src\app\services\roleService.ts" />
    <None Remove="ClientApp\src\app\user-pages\user-orders.component.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\api-authorization\auth-role-access\authorization-role-can-access.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\admin\admin.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\details\about-us.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\details\contacts.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\details\how-to.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\boockedPerformance.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\performance.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\performanceDate.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\PerformanceModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\performanceTime.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\performance\performance.details.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\performance\performance.filter.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\performance\performance.item.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\performance\performances.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\performanceService.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\roleService.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\user-pages\user-orders.component.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
